AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  (SO8029) GCR solution: Quantum Computing in HCLS

Parameters:
  NamePrefix:
    Type: String
    Default: HCLS

Resources:
  StepFuncsRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ${AWS::StackName}-${NamePrefix}-StepFuncsRole-${AWS::Region}
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/PowerUserAccess
      Policies:
        - PolicyName: role-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "iam:PassRole"
                Resource: "*"

  SageMakerRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ${AWS::StackName}-${NamePrefix}-SageMakerRole-${AWS::Region}
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/PowerUserAccess

  SMProcessingStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Run processing",
          "States": {
            "Run processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::sagemaker:createProcessingJob.sync",
              "Parameters": {
                "AppSpecification": {
                  "ImageUri": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/qc-batch-experiment:latest",
                  "ContainerArguments.$": "$.ContainerArguments"
                },
                "ProcessingResources": {
                  "ClusterConfig": {
                    "InstanceCount": 1,
                    "InstanceType.$": "$.InstanceType",
                    "VolumeSizeInGB": 5
                  }
                },
                "RoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${AWS::StackName}-${NamePrefix}-SageMakerRole-${AWS::Region}",
                "ProcessingJobName.$": "States.Format('{}', $$.Execution.Name)"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "ThrottlingException",
                    "SageMaker.AmazonSageMakerException"
                  ],
                  "IntervalSeconds": 6,
                  "MaxAttempts": 5,
                  "BackoffRate": 2
                }
              ],
              "ResultSelector": {
                "ProcessingJobName.$": "$.ProcessingJobName",
                "ProcessingJobStatus.$": "$.ProcessingJobStatus"
              },
              "ResultPath": "$.RunProcessing",
              "End": true
            }
          }
        }

  M1xDW2000Q6xC5XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_C5XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_DW2000Q6_C5XLARGE",
          "States": {
            "M1_DW2000Q6_C5XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-DW2000Q6-C5XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xDW2000Q6xC52XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_C52XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_DW2000Q6_C52XLARGE",
          "States": {
            "M1_DW2000Q6_C52XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.2xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-DW2000Q6-C52XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xDW2000Q6xM54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_M54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_DW2000Q6_M54XLARGE",
          "States": {
            "M1_DW2000Q6_M54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.m5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-DW2000Q6-M54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xDW2000Q6xC54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_C54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_DW2000Q6_C54XLARGE",
          "States": {
            "M1_DW2000Q6_C54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-DW2000Q6-C54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xDW2000Q6xR512XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_R512XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_DW2000Q6_R512XLARGE",
          "States": {
            "M1_DW2000Q6_R512XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.r5.12xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-DW2000Q6-R512XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xDW2000Q6xC5XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_C5XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_DW2000Q6_C5XLARGE",
          "States": {
            "M2_DW2000Q6_C5XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-DW2000Q6-C5XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xDW2000Q6xC52XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_C52XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_DW2000Q6_C52XLARGE",
          "States": {
            "M2_DW2000Q6_C52XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.2xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-DW2000Q6-C52XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xDW2000Q6xM54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_M54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_DW2000Q6_M54XLARGE",
          "States": {
            "M2_DW2000Q6_M54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.m5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-DW2000Q6-M54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xDW2000Q6xC54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_C54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_DW2000Q6_C54XLARGE",
          "States": {
            "M2_DW2000Q6_C54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-DW2000Q6-C54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xDW2000Q6xR512XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_R512XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_DW2000Q6_R512XLARGE",
          "States": {
            "M2_DW2000Q6_R512XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.r5.12xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-DW2000Q6-R512XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xDW2000Q6xC5XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_C5XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_DW2000Q6_C5XLARGE",
          "States": {
            "M3_DW2000Q6_C5XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-DW2000Q6-C5XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xDW2000Q6xC52XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_C52XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_DW2000Q6_C52XLARGE",
          "States": {
            "M3_DW2000Q6_C52XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.2xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-DW2000Q6-C52XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xDW2000Q6xM54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_M54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_DW2000Q6_M54XLARGE",
          "States": {
            "M3_DW2000Q6_M54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.m5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-DW2000Q6-M54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xDW2000Q6xC54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_C54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_DW2000Q6_C54XLARGE",
          "States": {
            "M3_DW2000Q6_C54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-DW2000Q6-C54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xDW2000Q6xR512XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_R512XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_DW2000Q6_R512XLARGE",
          "States": {
            "M3_DW2000Q6_R512XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.r5.12xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-DW2000Q6-R512XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xDW2000Q6xC5XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_C5XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_DW2000Q6_C5XLARGE",
          "States": {
            "M4_DW2000Q6_C5XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-DW2000Q6-C5XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xDW2000Q6xC52XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_C52XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_DW2000Q6_C52XLARGE",
          "States": {
            "M4_DW2000Q6_C52XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.2xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-DW2000Q6-C52XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xDW2000Q6xM54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_M54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_DW2000Q6_M54XLARGE",
          "States": {
            "M4_DW2000Q6_M54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.m5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-DW2000Q6-M54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xDW2000Q6xC54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_C54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_DW2000Q6_C54XLARGE",
          "States": {
            "M4_DW2000Q6_C54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-DW2000Q6-C54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xDW2000Q6xR512XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_R512XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_DW2000Q6_R512XLARGE",
          "States": {
            "M4_DW2000Q6_R512XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.r5.12xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-DW2000Q6-R512XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xAdvantS1xC5XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_AdvantS1_C5XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_AdvantS1_C5XLARGE",
          "States": {
            "M1_AdvantS1_C5XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-AdvantS1-C5XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xAdvantS1xC52XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_AdvantS1_C52XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_AdvantS1_C52XLARGE",
          "States": {
            "M1_AdvantS1_C52XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.2xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-AdvantS1-C52XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xAdvantS1xM54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_AdvantS1_M54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_AdvantS1_M54XLARGE",
          "States": {
            "M1_AdvantS1_M54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.m5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-AdvantS1-M54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xAdvantS1xC54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_AdvantS1_C54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_AdvantS1_C54XLARGE",
          "States": {
            "M1_AdvantS1_C54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-AdvantS1-C54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1xAdvantS1xR512XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1_AdvantS1_R512XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M1_AdvantS1_R512XLARGE",
          "States": {
            "M1_AdvantS1_R512XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '1', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.r5.12xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M1-AdvantS1-R512XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xAdvantS1xC5XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_AdvantS1_C5XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_AdvantS1_C5XLARGE",
          "States": {
            "M2_AdvantS1_C5XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-AdvantS1-C5XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xAdvantS1xC52XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_AdvantS1_C52XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_AdvantS1_C52XLARGE",
          "States": {
            "M2_AdvantS1_C52XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.2xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-AdvantS1-C52XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xAdvantS1xM54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_AdvantS1_M54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_AdvantS1_M54XLARGE",
          "States": {
            "M2_AdvantS1_M54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.m5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-AdvantS1-M54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xAdvantS1xC54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_AdvantS1_C54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_AdvantS1_C54XLARGE",
          "States": {
            "M2_AdvantS1_C54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-AdvantS1-C54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M2xAdvantS1xR512XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2_AdvantS1_R512XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M2_AdvantS1_R512XLARGE",
          "States": {
            "M2_AdvantS1_R512XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '2', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.r5.12xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M2-AdvantS1-R512XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xAdvantS1xC5XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_AdvantS1_C5XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_AdvantS1_C5XLARGE",
          "States": {
            "M3_AdvantS1_C5XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-AdvantS1-C5XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xAdvantS1xC52XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_AdvantS1_C52XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_AdvantS1_C52XLARGE",
          "States": {
            "M3_AdvantS1_C52XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.2xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-AdvantS1-C52XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xAdvantS1xM54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_AdvantS1_M54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_AdvantS1_M54XLARGE",
          "States": {
            "M3_AdvantS1_M54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.m5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-AdvantS1-M54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xAdvantS1xC54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_AdvantS1_C54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_AdvantS1_C54XLARGE",
          "States": {
            "M3_AdvantS1_C54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-AdvantS1-C54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M3xAdvantS1xR512XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3_AdvantS1_R512XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M3_AdvantS1_R512XLARGE",
          "States": {
            "M3_AdvantS1_R512XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '3', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.r5.12xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M3-AdvantS1-R512XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xAdvantS1xC5XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_AdvantS1_C5XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_AdvantS1_C5XLARGE",
          "States": {
            "M4_AdvantS1_C5XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-AdvantS1-C5XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xAdvantS1xC52XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_AdvantS1_C52XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_AdvantS1_C52XLARGE",
          "States": {
            "M4_AdvantS1_C52XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.2xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-AdvantS1-C52XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xAdvantS1xM54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_AdvantS1_M54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_AdvantS1_M54XLARGE",
          "States": {
            "M4_AdvantS1_M54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.m5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-AdvantS1-M54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xAdvantS1xC54XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_AdvantS1_C54XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_AdvantS1_C54XLARGE",
          "States": {
            "M4_AdvantS1_C54XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.c5.4xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-AdvantS1-C54XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M4xAdvantS1xR512XLARGE:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4_AdvantS1_R512XLARGE
      DefinitionString: !Sub |
        {
          "StartAt": "M4_AdvantS1_R512XLARGE",
          "States": {
            "M4_AdvantS1_R512XLARGE": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ContainerArguments.$": "States.Array('--M', '4', '--device-arn', 'arn:aws:braket:::device/qpu/d-wave/Advantage_system1', '--aws-region', '${AWS::Region}')",
                  "InstanceType": "ml.r5.12xlarge"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('M4-AdvantS1-R512XLARGE-{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }

  M1:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M1
      DefinitionString: !Sub |
        {
          "StartAt": "M1",
          "States": {
            "M1": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "M1_DW2000Q6",
                  "States": {
                    "M1_DW2000Q6": {
                      "Type": "Parallel",
                      "Branches": [
                        {
                          "StartAt": "M1_DW2000Q6_C5XLARGE",
                          "States": {
                            "M1_DW2000Q6_C5XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_C5XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M1_DW2000Q6_C52XLARGE",
                          "States": {
                            "M1_DW2000Q6_C52XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_C52XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M1_DW2000Q6_M54XLARGE",
                          "States": {
                            "M1_DW2000Q6_M54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_M54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M1_DW2000Q6_C54XLARGE",
                          "States": {
                            "M1_DW2000Q6_C54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_C54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M1_DW2000Q6_R512XLARGE",
                          "States": {
                            "M1_DW2000Q6_R512XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_DW2000Q6_R512XLARGE"
                              },
                              "End": true
                            }
                          }
                        }
                      ],
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "M1_AdvantS1",
                  "States": {
                    "M1_AdvantS1": {
                      "Type": "Parallel",
                      "Branches": [
                        {
                          "StartAt": "M1_AdvantS1_C5XLARGE",
                          "States": {
                            "M1_AdvantS1_C5XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_AdvantS1_C5XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M1_AdvantS1_C52XLARGE",
                          "States": {
                            "M1_AdvantS1_C52XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_AdvantS1_C52XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M1_AdvantS1_M54XLARGE",
                          "States": {
                            "M1_AdvantS1_M54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_AdvantS1_M54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M1_AdvantS1_C54XLARGE",
                          "States": {
                            "M1_AdvantS1_C54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_AdvantS1_C54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M1_AdvantS1_R512XLARGE",
                          "States": {
                            "M1_AdvantS1_R512XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1_AdvantS1_R512XLARGE"
                              },
                              "End": true
                            }
                          }
                        }
                      ],
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }

  M2:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M2
      DefinitionString: !Sub |
        {
          "StartAt": "M2",
          "States": {
            "M2": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "M2_DW2000Q6",
                  "States": {
                    "M2_DW2000Q6": {
                      "Type": "Parallel",
                      "Branches": [
                        {
                          "StartAt": "M2_DW2000Q6_C5XLARGE",
                          "States": {
                            "M2_DW2000Q6_C5XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_C5XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M2_DW2000Q6_C52XLARGE",
                          "States": {
                            "M2_DW2000Q6_C52XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_C52XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M2_DW2000Q6_M54XLARGE",
                          "States": {
                            "M2_DW2000Q6_M54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_M54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M2_DW2000Q6_C54XLARGE",
                          "States": {
                            "M2_DW2000Q6_C54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_C54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M2_DW2000Q6_R512XLARGE",
                          "States": {
                            "M2_DW2000Q6_R512XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_DW2000Q6_R512XLARGE"
                              },
                              "End": true
                            }
                          }
                        }
                      ],
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "M2_AdvantS1",
                  "States": {
                    "M2_AdvantS1": {
                      "Type": "Parallel",
                      "Branches": [
                        {
                          "StartAt": "M2_AdvantS1_C5XLARGE",
                          "States": {
                            "M2_AdvantS1_C5XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_AdvantS1_C5XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M2_AdvantS1_C52XLARGE",
                          "States": {
                            "M2_AdvantS1_C52XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_AdvantS1_C52XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M2_AdvantS1_M54XLARGE",
                          "States": {
                            "M2_AdvantS1_M54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_AdvantS1_M54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M2_AdvantS1_C54XLARGE",
                          "States": {
                            "M2_AdvantS1_C54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_AdvantS1_C54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M2_AdvantS1_R512XLARGE",
                          "States": {
                            "M2_AdvantS1_R512XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2_AdvantS1_R512XLARGE"
                              },
                              "End": true
                            }
                          }
                        }
                      ],
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }


  M3:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M3
      DefinitionString: !Sub |
        {
          "StartAt": "M3",
          "States": {
            "M3": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "M3_DW2000Q6",
                  "States": {
                    "M3_DW2000Q6": {
                      "Type": "Parallel",
                      "Branches": [
                        {
                          "StartAt": "M3_DW2000Q6_C5XLARGE",
                          "States": {
                            "M3_DW2000Q6_C5XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_C5XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M3_DW2000Q6_C52XLARGE",
                          "States": {
                            "M3_DW2000Q6_C52XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_C52XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M3_DW2000Q6_M54XLARGE",
                          "States": {
                            "M3_DW2000Q6_M54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_M54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M3_DW2000Q6_C54XLARGE",
                          "States": {
                            "M3_DW2000Q6_C54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_C54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M3_DW2000Q6_R512XLARGE",
                          "States": {
                            "M3_DW2000Q6_R512XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_DW2000Q6_R512XLARGE"
                              },
                              "End": true
                            }
                          }
                        }
                      ],
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "M3_AdvantS1",
                  "States": {
                    "M3_AdvantS1": {
                      "Type": "Parallel",
                      "Branches": [
                        {
                          "StartAt": "M3_AdvantS1_C5XLARGE",
                          "States": {
                            "M3_AdvantS1_C5XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_AdvantS1_C5XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M3_AdvantS1_C52XLARGE",
                          "States": {
                            "M3_AdvantS1_C52XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_AdvantS1_C52XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M3_AdvantS1_M54XLARGE",
                          "States": {
                            "M3_AdvantS1_M54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_AdvantS1_M54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M3_AdvantS1_C54XLARGE",
                          "States": {
                            "M3_AdvantS1_C54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_AdvantS1_C54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M3_AdvantS1_R512XLARGE",
                          "States": {
                            "M3_AdvantS1_R512XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3_AdvantS1_R512XLARGE"
                              },
                              "End": true
                            }
                          }
                        }
                      ],
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }

  M4:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-M4
      DefinitionString: !Sub |
        {
          "StartAt": "M4",
          "States": {
            "M4": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "M4_DW2000Q6",
                  "States": {
                    "M4_DW2000Q6": {
                      "Type": "Parallel",
                      "Branches": [
                        {
                          "StartAt": "M4_DW2000Q6_C5XLARGE",
                          "States": {
                            "M4_DW2000Q6_C5XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_C5XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M4_DW2000Q6_C52XLARGE",
                          "States": {
                            "M4_DW2000Q6_C52XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_C52XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M4_DW2000Q6_M54XLARGE",
                          "States": {
                            "M4_DW2000Q6_M54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_M54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M4_DW2000Q6_C54XLARGE",
                          "States": {
                            "M4_DW2000Q6_C54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_C54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M4_DW2000Q6_R512XLARGE",
                          "States": {
                            "M4_DW2000Q6_R512XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_DW2000Q6_R512XLARGE"
                              },
                              "End": true
                            }
                          }
                        }
                      ],
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "M4_AdvantS1",
                  "States": {
                    "M4_AdvantS1": {
                      "Type": "Parallel",
                      "Branches": [
                        {
                          "StartAt": "M4_AdvantS1_C5XLARGE",
                          "States": {
                            "M4_AdvantS1_C5XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_AdvantS1_C5XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M4_AdvantS1_C52XLARGE",
                          "States": {
                            "M4_AdvantS1_C52XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_AdvantS1_C52XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M4_AdvantS1_M54XLARGE",
                          "States": {
                            "M4_AdvantS1_M54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_AdvantS1_M54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M4_AdvantS1_C54XLARGE",
                          "States": {
                            "M4_AdvantS1_C54XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_AdvantS1_C54XLARGE"
                              },
                              "End": true
                            }
                          }
                        },
                        {
                          "StartAt": "M4_AdvantS1_R512XLARGE",
                          "States": {
                            "M4_AdvantS1_R512XLARGE": {
                              "Type": "Task",
                              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                              "Parameters": {
                                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4_AdvantS1_R512XLARGE"
                              },
                              "End": true
                            }
                          }
                        }
                      ],
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }


  BatchExperiment:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFuncsRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-${NamePrefix}-BatchExperiment
      DefinitionString: !Sub |
        {
          "StartAt": "Batch Experiment",
          "States": {
            "Batch Experiment": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "Wait 5 Seconds",
                  "States": {
                    "Wait 5 Seconds" : {
                      "Type" : "Wait",
                      "Seconds" : 5,
                      "Next": "M1"
                    },
                    "M1": {
                      "Type": "Task",
                      "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M1"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Wait 15 Seconds",
                  "States": {
                    "Wait 15 Seconds" : {
                      "Type" : "Wait",
                      "Seconds" : 15,
                      "Next": "M2"
                    },
                    "M2": {
                      "Type": "Task",
                      "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M2"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Wait 25 Seconds",
                  "States": {
                    "Wait 25 Seconds" : {
                      "Type" : "Wait",
                      "Seconds" : 25,
                      "Next": "M3"
                    },
                    "M3": {
                      "Type": "Task",
                      "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M3"
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "M4",
                  "States": {
                    "M4": {
                      "Type": "Task",
                      "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-${NamePrefix}-M4"
                      },
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }



Outputs:
  BatchExperimentStepFunctions:
    Description: Batch Experiment StepFunctions Arn
    Value: !Ref BatchExperiment

  M1StepFunctions:
    Description: M1 StepFunctions Arn
    Value: !Ref M1

  M2StepFunctions:
    Description: M2 StepFunctions Arn
    Value: !Ref M2

  M3StepFunctions:
    Description: M3 StepFunctions Arn
    Value: !Ref M3

  M4StepFunctions:
    Description: M4 StepFunctions Arn
    Value: !Ref M4